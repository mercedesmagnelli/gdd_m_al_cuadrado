USE GD2C2022
GO

-- DROP FK
IF OBJECT_ID('BI_M_AL_CUBO.FK_ENVIO_PROVINCIA_ID', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_ENVIO DROP CONSTRAINT FK_ENVIO_PROVINCIA_ID
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_VENTA', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_PRODUCTO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_PRODUCTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_MEDIO_PAGO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_MEDIO_PAGO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_TIEMPO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_TIEMPO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_PROVINCIA', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_PROVINCIA
GO


IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_CLIENTE', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_CLIENTE
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_RANGO_EDAD', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_RANGO_EDAD
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_CANAL_VENTA', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_CANAL_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_VENTA_ID_ENVIO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA DROP CONSTRAINT FK_HECHO_VENTA_ID_ENVIO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_DESCUENTO_ID_VENTA', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_DESCUENTO DROP CONSTRAINT FK_HECHO_DESCUENTO_ID_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_DESCUENTO_ID_DESCUENTO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_DESCUENTO DROP CONSTRAINT FK_HECHO_DESCUENTO_ID_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_COMPRA_ID_COMPRA', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA DROP CONSTRAINT FK_HECHO_COMPRA_ID_COMPRA
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_COMPRA_ID_PRODUCTO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA DROP CONSTRAINT FK_HECHO_COMPRA_ID_PRODUCTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_COMPRA_ID_PROVEEDOR', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA DROP CONSTRAINT FK_HECHO_COMPRA_ID_PROVEEDOR
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_DESCUENTO_ID_DESCUENTO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA DROP CONSTRAINT FK_HECHO_DESCUENTO_ID_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.FK_HECHO_COMPRA_ID_TIEMPO', 'F') IS NOT NULL
  ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA DROP CONSTRAINT FK_HECHO_COMPRA_ID_TIEMPO
GO

-- DROPS DE TABLAS
IF OBJECT_ID('BI_M_AL_CUBO.BI_CANAL_VENTA', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_CANAL_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_PROVINCIA', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_PROVINCIA
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_ENVIO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_ENVIO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_CLIENTE', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_CLIENTE
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_MEDIO_PAGO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_MEDIO_PAGO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_RANGO_EDAD', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_RANGO_EDAD
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_PRODUCTO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_PRODUCTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_TIEMPO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_TIEMPO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_COSTO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_COSTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_DESCUENTO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_PROVEEDOR', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_PROVEEDOR
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_HECHO_VENTA', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_HECHO_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_HECHO_DESCUENTO', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_HECHO_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_HECHO_COMPRA', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA
GO

IF OBJECT_ID('BI_M_AL_CUBO.BI_HECHO_COMPRA', 'U') IS NOT NULL
    DROP TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA
GO


----DROP FUNCTIONS
IF OBJECT_ID('BI_M_AL_CUBO.FX_CALCULAR_RANGO') IS NOT NULL
	DROP FUNCTION BI_M_AL_CUBO.FX_CALCULAR_RANGO
GO


----DROP PROCEDURES

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD
GO


IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_TIEMPO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_TIEMPO
GO
IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_PROVINCIA') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PROVINCIA
GO
IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_MEDIO_PAGO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_MEDIO_PAGO
GO
IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_ENVIO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_ENVIO
GO
IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_CLIENTE') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_CLIENTE
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_ENVIO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_ENVIO
GO


IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_PROVEEDOR') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PROVEEDOR
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_DESCUENTO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_HECHO_VENTA') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_HECHO_DESCUENTO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_DESCUENTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_HECHO_COMPRA') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_COMPRA
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_CANAL_VENTA') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_CANAL_VENTA
GO

IF OBJECT_ID('BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD') IS NOT NULL
  DROP PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD
GO


--DROP ESQUEMA
IF EXISTS (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'BI_M_AL_CUBO')
  DROP SCHEMA BI_M_AL_CUBO
GO

-- CREO ESQUEMA
CREATE SCHEMA BI_M_AL_CUBO
GO

-- CREACION DE TABLAS

CREATE TABLE BI_M_AL_CUBO.BI_CANAL_VENTA(
	CANAL_VENTA_ID INT PRIMARY KEY,
	CANAL_DESC NVARCHAR(255),
	CANAL_COSTO DECIMAL(18,2)
)
GO

CREATE TABLE BI_M_AL_CUBO.BI_PROVINCIA(
	PROVINCIA_ID INT   PRIMARY KEY,
	PROVINCIA_NOMBRE NVARCHAR(255)
)
GO

CREATE TABLE BI_M_AL_CUBO.BI_ENVIO(
	ENVIO_ID INT   PRIMARY KEY,
	PROVINCIA_ID INT,
	LOCALIDAD_NOMBRE NVARCHAR(255),
	LOCALIDAD_CODIGO DECIMAL(18,2),
	ENVIO_DETALLE NVARCHAR(255),
	ENVIO_PRECIO DECIMAL(18,2)
)
GO

CREATE TABLE BI_M_AL_CUBO.BI_CLIENTE(
	CLIENTE_ID INT   PRIMARY KEY,
	CLIENTE_NOMBRE NVARCHAR(255),
	CLIENTE_APELLIDO NVARCHAR(255),
	CLIENTE_DNI INT,
	CLIENTE_DIRECCION NVARCHAR(255),
	CLIENTE_TELEFONO INT,
	CLIENTE_MAIL NVARCHAR(255),
	CLIENTE_FECHA_NAC DATE,
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_MEDIO_PAGO(
	MEDIO_PAGO_ID INT PRIMARY KEY ,
	MEDIO_PAGO_DESCRIPCION NVARCHAR(255), 
	MEDIO_PAGO_COSTO DECIMAL(18,2)
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_RANGO_EDAD(
	RANGO_EDAD_ID INT IDENTITY (1,1) PRIMARY KEY ,
	RANGO_EDAD_DESCRIPCION NVARCHAR(255)
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_PRODUCTO(
	PRODUCTO_ID INT   PRIMARY KEY,
	PRODUCTO_NOMBRE NVARCHAR(255),
	PRODUCTO_CODIGO NVARCHAR(50),
	DESCRIPCION_PROD NVARCHAR(255),
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_TIEMPO(
	TIEMPO_ID INT IDENTITY(1,1) PRIMARY KEY,
	TIEMPO_ANIO INT,
	TIEMPO_MES INT
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_DESCUENTO(
	DESCUENTO_ID INT   PRIMARY KEY,
	DESCUENTO_CONCEPTO NVARCHAR(255)
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_PROVEEDOR(
	PROVEEDOR_ID INT PRIMARY KEY,
	PROVEEDOR_RAZON_SOCIAL NVARCHAR(50),
	PROVEEDOR_CUIT NVARCHAR(50),
	PROVEEDOR_DOMICILIO NVARCHAR(50),
	PROVEEDOR_MAIL NVARCHAR(50),
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_HECHO_VENTA(
	ID_HECHO_VENTA int identity(1,1),
	ID_VENTA INT,
	ID_PRODUCTO INT,
	ID_MEDIO_PAGO INT,
	ID_TIEMPO INT,
	ID_CLIENTE INT,
	ID_RANGO_EDAD INT,
	ID_CANAL_VENTA INT,
	ID_ENVIO INT,
	ID_PROVINCIA INT,
	PRECIO DECIMAL(18,2),
	UNIDADES DECIMAL(18,2)
	PRIMARY KEY(ID_HECHO_VENTA, ID_VENTA, ID_PRODUCTO, ID_MEDIO_PAGO, ID_TIEMPO, ID_CLIENTE, ID_RANGO_EDAD, ID_CANAL_VENTA, ID_ENVIO)
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_HECHO_DESCUENTO(
	ID_HECHO_DESCUENTO int identity(1,1), 
	ID_VENTA INT,
	ID_DESCUENTO INT,
	DESCUENTO_IMPORTE DECIMAL(18,2)
	PRIMARY KEY (ID_HECHO_DESCUENTO, ID_VENTA, ID_DESCUENTO)
);
GO

CREATE TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA(
	ID_HECHO_COMPRA int identity(1,1),
	ID_COMPRA INT,
	ID_PRODUCTO INT,
	ID_PROVEEDOR INT, 
	ID_TIEMPO INT,
	PRECIO DECIMAL(18,2),
	UNIDADES DECIMAL(18,2)
	PRIMARY KEY (ID_HECHO_COMPRA, ID_COMPRA, ID_PRODUCTO, ID_PROVEEDOR, ID_TIEMPO)
);
GO

-- FK

--ENV
ALTER TABLE BI_M_AL_CUBO.BI_ENVIO ADD CONSTRAINT FK_ENVIO_PROVINCIA_ID FOREIGN KEY (PROVINCIA_ID) REFERENCES BI_M_AL_CUBO.BI_PROVINCIA(PROVINCIA_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES BI_M_AL_CUBO.BI_PRODUCTO(PRODUCTO_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_MEDIO_PAGO FOREIGN KEY (ID_MEDIO_PAGO) REFERENCES BI_M_AL_CUBO.BI_MEDIO_PAGO(MEDIO_PAGO_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_TIEMPO FOREIGN KEY (ID_TIEMPO) REFERENCES BI_M_AL_CUBO.BI_TIEMPO(TIEMPO_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES BI_M_AL_CUBO.BI_CLIENTE(CLIENTE_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_RANGO_EDAD FOREIGN KEY (ID_RANGO_EDAD) REFERENCES BI_M_AL_CUBO.BI_RANGO_EDAD(RANGO_EDAD_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_CANAL_VENTA FOREIGN KEY (ID_CANAL_VENTA) REFERENCES BI_M_AL_CUBO.BI_CANAL_VENTA(CANAL_VENTA_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_ENVIO FOREIGN KEY (ID_ENVIO) REFERENCES BI_M_AL_CUBO.BI_ENVIO(ENVIO_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_VENTA ADD CONSTRAINT FK_HECHO_VENTA_ID_PROVINCIA FOREIGN KEY (ID_PROVINCIA) REFERENCES BI_M_AL_CUBO.BI_PROVINCIA(PROVINCIA_ID)
GO

--DESC
ALTER TABLE BI_M_AL_CUBO.BI_HECHO_DESCUENTO ADD CONSTRAINT FK_HECHO_DESCUENTO_ID_DESCUENTO FOREIGN KEY (ID_DESCUENTO) REFERENCES BI_M_AL_CUBO.BI_DESCUENTO(DESCUENTO_ID)
GO

--COMP
ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA ADD CONSTRAINT FK_HECHO_COMPRA_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES BI_M_AL_CUBO.BI_PRODUCTO(PRODUCTO_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA ADD CONSTRAINT FK_HECHO_COMPRA_ID_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR) REFERENCES BI_M_AL_CUBO.BI_PROVEEDOR(PROVEEDOR_ID)
GO

ALTER TABLE BI_M_AL_CUBO.BI_HECHO_COMPRA ADD CONSTRAINT FK_HECHO_COMPRA_ID_TIEMPO FOREIGN KEY (ID_TIEMPO) REFERENCES BI_M_AL_CUBO.BI_TIEMPO(TIEMPO_ID)
GO

-- FUNCTIONS
CREATE FUNCTION BI_M_AL_CUBO.FX_CALCULAR_RANGO(@CLIENTE INT)
	RETURNS INT
BEGIN
	DECLARE @FECHA_NAC SMALLDATETIME
	DECLARE @EDAD INT
	DECLARE @ID_RANGO INT
	SET @FECHA_NAC = (SELECT CLIENTE_FECHA_NAC FROM BI_M_AL_CUBO.BI_CLIENTE WHERE CLIENTE_ID = @CLIENTE)

	SET @EDAD = YEAR(GETDATE()) -YEAR(@FECHA_NAC)

	IF @EDAD < 25
		SET @ID_RANGO = 1

	IF @EDAD BETWEEN 25 AND 35 
		SET @ID_RANGO = 2

	IF @EDAD BETWEEN 35 AND 55
		SET @ID_RANGO = 3

	IF @EDAD > 55
		SET @ID_RANGO = 4

	RETURN @ID_RANGO
	
END
GO

----- PROCEDURES


CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD
AS
BEGIN 

INSERT INTO BI_M_AL_CUBO.BI_RANGO_EDAD(RANGO_EDAD_DESCRIPCION)
	VALUES('<25')
INSERT INTO BI_M_AL_CUBO.BI_RANGO_EDAD(RANGO_EDAD_DESCRIPCION)
	VALUES('25-35')
INSERT INTO BI_M_AL_CUBO.BI_RANGO_EDAD(RANGO_EDAD_DESCRIPCION)
	VALUES('35-55')
INSERT INTO BI_M_AL_CUBO.BI_RANGO_EDAD(RANGO_EDAD_DESCRIPCION)
	VALUES('>55')
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_TIEMPO
AS
BEGIN

INSERT INTO BI_M_AL_CUBO.BI_TIEMPO(TIEMPO_ANIO, TIEMPO_MES)
(SELECT YEAR(V.VENTA_FECHA), MONTH(V.VENTA_FECHA) FROM M_AL_CUBO.VENTA V)
UNION 
(SELECT YEAR(COMPRA_FECHA), MONTH(COMPRA_FECHA)  FROM M_AL_CUBO.COMPRA C
)
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PROVINCIA
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_PROVINCIA 
	SELECT * FROM M_AL_CUBO.PROVINCIA
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_MEDIO_PAGO
AS
BEGIN

INSERT INTO BI_M_AL_CUBO.BI_MEDIO_PAGO(MEDIO_PAGO_ID,MEDIO_PAGO_DESCRIPCION, MEDIO_PAGO_COSTO)
SELECT mv.MEDIO_PAGO_VENTAS_ID, mp.MEDIO_PAGO_DESCRIPCION, mv.MEDIO_DE_PAGO_COSTO_VENTAS FROM M_AL_CUBO.MEDIO_PAGO mp join 
M_AL_CUBO.MEDIO_PAGO_VENTAS mv on mv.MEDIO_PAGO_ID = mp.MEDIO_PAGO_ID

END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_ENVIO
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_ENVIO(ENVIO_ID, PROVINCIA_ID, LOCALIDAD_NOMBRE, LOCALIDAD_CODIGO, ENVIO_DETALLE, ENVIO_PRECIO)
	SELECT ME.ID_ENVIO_X_LOC, P.PROVINCIA_ID, L.LOCALIDAD_NOMBRE, L.LOCALIDAD_CODIGO_POSTAL, ENVIO_DESCRIPCION, ME.VENTA_ENVIO_PRECIO FROM M_AL_CUBO.MEDIO_ENVIO_X_LOCALIDAD ME
	JOIN M_AL_CUBO.MEDIO_ENVIO ON MEDIO_ENVIO_ID = ENVIO_ID
	JOIN M_AL_CUBO.LOCALIDAD L ON L.LOCALIDAD_ID = ME.LOCALIDAD_ID
	JOIN M_AL_CUBO.PROVINCIA P ON P.PROVINCIA_ID = L.PROVINCIA_ID

END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_CLIENTE
AS
BEGIN
INSERT INTO BI_M_AL_CUBO.BI_CLIENTE(CLIENTE_ID, CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DNI, CLIENTE_DIRECCION, CLIENTE_TELEFONO, CLIENTE_MAIL, CLIENTE_FECHA_NAC)
SELECT C.CLIENTE_ID, C.CLIENTE_NOMBRE, c.CLIENTE_APELLIDO, c.CLIENTE_DNI, c.CLIENTE_DIRECCION, c.CLIENTE_TELEFONO, c.CLIENTE_MAIL, c.CLIENTE_FECHA_NAC FROM M_AL_CUBO.CLIENTE c
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_CANAL_VENTA
AS
BEGIN

INSERT INTO BI_M_AL_CUBO.BI_CANAL_VENTA(CANAL_VENTA_ID, CANAL_DESC, CANAL_COSTO)
SELECT CV.CANAL_VENTA_ID ,C.CANAL_DESCRIPCION, VENTA_CANAL_COSTO FROM M_AL_CUBO.CANAL_VENTA CV JOIN M_AL_CUBO.CANAL C ON C.CANAL_ID = CV.CANAL_ID

END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PROVEEDOR
AS
BEGIN

INSERT INTO BI_M_AL_CUBO.BI_PROVEEDOR (PROVEEDOR_ID,PROVEEDOR_RAZON_SOCIAL, PROVEEDOR_CUIT, PROVEEDOR_DOMICILIO,PROVEEDOR_MAIL) 
SELECT P.PROVEEDOR_ID, P.PROVEEDOR_RAZON_SOCIAL, P.PROVEEDOR_CUIT, P.PROVEEDOR_DOMICILIO, P.PROVEEDOR_MAIL FROM M_AL_CUBO.PROVEEDOR P

END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_DESCUENTO
AS
BEGIN

INSERT INTO BI_M_AL_CUBO.BI_DESCUENTO(DESCUENTO_ID,DESCUENTO_CONCEPTO)
SELECT DESCUENTO_ID,VENTA_DESCUENTO_CONCEPTO FROM M_AL_CUBO.DESCUENTO

END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_PRODUCTO(PRODUCTO_ID, PRODUCTO_NOMBRE, PRODUCTO_CODIGO, DESCRIPCION_PROD)
	SELECT PRODUCTO_ID, PRODUCTO_NOMBRE, PRODUCTO_CODIGO, DESCRIPCION_PROD FROM M_AL_CUBO.PRODUCTO
END
GO


CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_VENTA
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_HECHO_VENTA (ID_VENTA, ID_PRODUCTO, ID_MEDIO_PAGO, ID_TIEMPO, ID_CLIENTE, ID_RANGO_EDAD, ID_CANAL_VENTA, ID_ENVIO, ID_PROVINCIA, PRECIO, UNIDADES)
	SELECT V.VENTA_ID PV, VP.PRODUCTO_ID, V.VENTA_MEDIO_PAGO_ID, T.TIEMPO_ID, V.VENTA_CLIENTE_ID, BI_M_AL_CUBO.FX_CALCULAR_RANGO(V.VENTA_CLIENTE_ID) ,V.VENTA_CANAL_ID, V.MEDIO_ENVIO_LOC_ID, ENV.PROVINCIA_ID, PVV.PRECIO_COMPRA, PVV.PROD_CANTIDAD FROM M_AL_CUBO.VENTA V
	JOIN BI_M_AL_CUBO.BI_ENVIO ENV on V.MEDIO_ENVIO_LOC_ID = ENV.ENVIO_ID 
	JOIN M_AL_CUBO.PRODUCTO_VARIANTE_X_VENTA PVV ON V.VENTA_ID = PVV.VENTA_ID
	JOIN M_AL_CUBO.VARIANTE_PRODUCTO VP ON VP.VARIANTE_PRODUCTO_ID = PVV.VARIANTE_PRODUCTO_ID
	JOIN BI_M_AL_CUBO.BI_TIEMPO T ON T.TIEMPO_ANIO = YEAR(VENTA_FECHA) AND T.TIEMPO_MES = MONTH(VENTA_FECHA)
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_COMPRA
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_HECHO_COMPRA (ID_COMPRA, ID_PRODUCTO, ID_PROVEEDOR, ID_TIEMPO, PRECIO, UNIDADES)
	SELECT C.COMPRA_ID, VP.PRODUCTO_ID, C.PROVEEDOR_ID, T.TIEMPO_ID, PVC.PRECIO_VENTA, PVC.PROD_CANTIDAD FROM M_AL_CUBO.COMPRA C
	JOIN M_AL_CUBO.PRODUCTO_VARIANTE_X_COMPRA PVC ON C.COMPRA_ID = PVC.COMPRA_ID
	JOIN M_AL_CUBO.VARIANTE_PRODUCTO VP ON VP.VARIANTE_PRODUCTO_ID = PVC.VARIANTE_PRODUCTO_ID
	JOIN BI_M_AL_CUBO.BI_TIEMPO T ON T.TIEMPO_ANIO = YEAR(COMPRA_FECHA) AND T.TIEMPO_MES = MONTH(COMPRA_FECHA)
END
GO

CREATE PROCEDURE BI_M_AL_CUBO.MIGRAR_BI_HECHO_DESCUENTO
AS
BEGIN
	INSERT INTO BI_M_AL_CUBO.BI_HECHO_DESCUENTO(ID_VENTA, ID_DESCUENTO, DESCUENTO_IMPORTE)
	SELECT VENTA_ID, DESCUENTO_ID, VENTA_DESCUENTO_IMPORTE FROM M_AL_CUBO.DESCUENTO_X_VENTA
END
GO

EXEC BI_M_AL_CUBO.MIGRAR_BI_CANAL_VENTA
--SELECT * FROM BI_M_AL_CUBO.bi_CANAL_VENTA -> SOLO HAY 4 CANALES DE VENTA

EXEC BI_M_AL_CUBO.MIGRAR_BI_RANGO_EDAD
--SELECT * FROM BI_M_AL_CUBO.BI_RANGO_EDAD -> SOLO HAY 4 RANGOS DE EDAD

EXEC BI_M_AL_CUBO.MIGRAR_BI_PROVINCIA
--SELECT * FROM BI_M_AL_CUBO.BI_PROVINCIA -> SOLO HAY 3 PROVINCIAS 

EXEC BI_M_AL_CUBO.MIGRAR_BI_TIEMPO
--SELECT * FROM BI_M_AL_CUBO.BI_TIEMPO -> HAY 12 COMBINACIONES DE AAMM

EXEC BI_M_AL_CUBO.MIGRAR_BI_MEDIO_PAGO
--SELECT * FROM BI_M_AL_CUBO.BI_MEDIO_PAGO -> HAY 4 MEDIOS DE PAGO

EXEC BI_M_AL_CUBO.MIGRAR_BI_ENVIO
--select * from BI_M_AL_CUBO.BI_ENVIO -> hay casio 30k de envios

EXEC BI_M_AL_CUBO.MIGRAR_BI_PRODUCTO
--SELECT * FROM BI_M_AL_CUBO.BI_PRODUCTO -> 1310 REPRODUCTOS

EXEC BI_M_AL_CUBO.MIGRAR_BI_PROVEEDOR
--SELECT * FROM BI_M_AL_CUBO.BI_PROVEEDOR

EXEC BI_M_AL_CUBO.MIGRAR_BI_CLIENTE
--SELECT DISTINCT * FROM BI_M_AL_CUBO.BI_CLIENTE

EXEC BI_M_AL_CUBO.MIGRAR_BI_DESCUENTO
--SELECT * FROM BI_M_AL_CUBO.BI_DESCUENTO

EXEC BI_M_AL_CUBO.MIGRAR_BI_HECHO_VENTA
--SELECT * FROM BI_M_AL_CUBO.BI_HECHO_VENTA

EXEC BI_M_AL_CUBO.MIGRAR_BI_HECHO_COMPRA
--select * from BI_M_AL_CUBO.BI_HECHO_COMPRA

EXEC BI_M_AL_CUBO.MIGRAR_BI_HECHO_DESCUENTO
--select * from BI_M_AL_CUBO.BI_HECHO_DESCUENTO


---------------------------------


/*EJERCICIO 1 */

CREATE VIEW M_AL_CUBO.GANANCIAS_MENSUALES_CANAL_VENTA
AS
SELECT (columnas)
FROM  (tablas)


/*EJERCICIO 2*/

CREATE VIEW M_AL_CUBO.PRODUCTOS_RENTABLES
AS
SELECT (columnas)
FROM  (tablas)


/*EJERCICIO  3 */

CREATE VIEW M_AL_CUBO.CATEGORIAS_MAS_VENDIDAS
AS
SELECT (columnas)
FROM  (tablas)


/********************
    EJERCICIO 04
    -- TODO: REVISAR!!!! 
    -- La unica relación entre descuento y venta es por mes y año y hay muchos
     -- Supuse que HECHO_DESCUENTO conoce HECHO_VENTA al que se aplicó el descuento
*********************/

/*
    Total de Ingresos por cada medio de pago por mes, descontando los costos
    por medio de pago (en caso que aplique) y descuentos por medio de pago
    (en caso que aplique) 
*/


/*
    Table - HECHO_VENTA
    Column - ID_VENTA PK
    Column - ID_TIEMPO FK
    Column - ID_MEDIO_PAGO FK
    Column - VENTA_UNIDAD
    Column - UNIDADES

    Table - DIMENSION_TIEMPO
    Column - ID_TIEMPO PK
    Column - TIEMPO_MES

    Table - BI_MEDIO_PAGO
    Column - MEDIO_PAGO_ID PK

    Table - HECHO_DESCUENTO
    Column - ID_DESCUENTO PK
    Column - ID_TIPO_DESCUENTO FK
    Column - ID_TIEMPO FK
    Column - ID_MEDIO_PAGO FK
    Column - DESCUENTO_IMPORTE
    Column - ID_VENTA FK
*/

CREATE VIEW M_AL_CUBO.INGRESOS_MEDIO_PAGO_MENSUAL
AS
SELECT (columnas)
FROM  (tablas)



/********************
    EJERCICIO 05
    -- TODO: REVISAR!!!! 
    -- La unica relación entre descuento y venta es por mes y año y hay muchos
    -- Supuse que HECHO_DESCUENTO conoce HECHO_VENTA al que se aplicó el descuento
*********************/

/*
    Importe total en descuentos aplicados según su tipo de descuento, por
    canal de venta, por mes. Se entiende por tipo de descuento como los
    correspondientes a envío, medio de pago, cupones, etc)
*/

-- Tomar todos los descuentos y agrupar por tipo de descuento y canal de venta y mes
-- Agrupar y sumar los descuentos importe

/*
    Table - HECHO_DESCUENTO
    Column - ID_DESCUENTO PK
    Column - DESCUENTO_IMPORTE
    Column - ID_TIEMPO FK
    Column - ID_VENTA FK

    Table - BI_ENVIO
    Column - ID_TIEMPO PK
    Column - tiempo_mes

    Table - HECHO_VENTA
    Column - ID_TIEMPO FK
    Column - ID_CANAL_VENTA FK

    Table - BI_CANAL_VENTA
    Column - canal_venta_id PK
*/


/*
    Explicacion:
    1. Obtenemos todos los descuentos haciendo join con la tabla tiempo y descuento
    2. Hacemos join con la tabla BI_CANAL_VENTA para obtener el canal de venta
    3. Agrupamos por tipo de descuento, canal de venta y mes
    4. En la agrupación hacemos la operación de obtener el total
    5. Mostramos
*/

--- esta se va a poder hacer cuando arreglemos la relación con el tiempo 
CREATE VIEW M_AL_CUBO.IMPORTE_DESCUENTOS
AS
SELECT
    bd.descuento_id AS id_tipo_descuento,
    bcv.canal_venta_id AS id_canal_venta,
    dt.tiempo_mes AS mes,
    SUM(bd.descuento_importe) AS total_descuentos
FROM BI_M_AL_CUBO.BI_HECHO_DESCUENTO bd
    INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt ON bd.ID_TIEMPO = dt.tiempo_id
    INNER JOIN BI_M_AL_CUBO.BI_HECHO_VENTA hv ON bd.ID_VENTA = hv.ID_VENTA
    INNER JOIN BI_M_AL_CUBO.BI_CANAL_VENTA bcv ON hv.ID_CANAL_VENTA = bcv.canal_venta_id
GROUP BY
    bd.descuento_id,
    bcv.canal_venta_id,
    dt.tiempo_mes


/********************
    EJERCICIO 06
*********************/

/*
     Porcentaje de envíos realizados a cada Provincia por mes. El porcentaje
    debe representar la cantidad de envíos realizados a cada provincia sobre
    total de envío mensuales
*/

-- Tomar todos los envios y agrupar por provincia y mes
-- Obtener el total de envios por mes
-- Obtener el total de envios por provincia y mes
-- Obtener el porcentaje de envios por provincia y mes

/*
    Table - HECHO_VENTA
    Column - ID_VENTA PK
    Column - ID_ENVIO FK
    Column - ID_TIEMPO FK

    Table - DIMENSION_TIEMPO
    Column - ID_TIEMPO PK
    Column - TIEMPO_MES

    Table - BI_ENVIO
    Column - envio_id PK
    Column - provincia_id FK
    Column - envio_precio
*/

/*
    Explicación:
    1. Obtenemos todas las ventas haciendo join con envio y con tiempo
    2. Agrupamos por id_provincia y tiempo_mes
    3. En la agrupación hacemos la operación de obtener el total
    4. Calculamos y mostramos
*/

CREATE VIEW M_AL_CUBO.ENVIOS_PROVINCIALES_MENSUALES
AS
SELECT
    be.provincia_id AS id_provincia,
    dt.tiempo_mes AS mes,
    (COUNT(hv.ID_VENTA) * 100) / (
        SELECT COUNT(hv2.ID_VENTA)
        FROM BI_M_AL_CUBO.BI_HECHO_VENTA hv2
            INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt2 ON hv2.ID_TIEMPO = dt2.tiempo_id
        WHERE dt2.tiempo_mes = dt.tiempo_mes
    ) AS porcentaje_envios
FROM BI_M_AL_CUBO.BI_HECHO_VENTA hv
    INNER JOIN BI_M_AL_CUBO.BI_ENVIO be ON hv.ID_ENVIO = be.envio_id
    INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt ON hv.ID_TIEMPO = dt.tiempo_id
GROUP BY
    be.provincia_id,
    dt.tiempo_mes


/********************
    EJERCICIO 07
*********************/

/*
    Valor promedio de envío por Provincia por Medio De Envío anual. 
*/

-- Tomar todos los envios y agrupar por provincia y medio de envio y anio
-- Obtener el promedio de envios por provincia y medio de envio y anio

/*
    Table - HECHO_VENTA
    Column - ID_VENTA PK
    Column - ID_ENVIO FK
    Column - ID_TIEMPO FK

    Table - DIMENSION_TIEMPO
    Column - ID_TIEMPO PK
    Column - TIEMPO_ANIO

    Table - BI_ENVIO
    Column - envio_id PK
    Column - provincia_id FK
    Column - envio_precio
*/

/*
    Explicación:
    1. Obtenemos todas las ventas haciendo join con envio y con tiempo
    2. Agrupamos por id_provincia, id_provincia y tiempo_anio
    3. En la agrupación hacemos la operación de obtener el promedio
    4. Mostramos
*/



CREATE VIEW M_AL_CUBO.ENVIOS_PROVINCUALES_ANUALES
AS
SELECT
    be.provincia_id AS id_provincia,
    be.envio_id AS id_medio_envio,
    dt.tiempo_anio AS anio,
    AVG(be.envio_precio) AS promedio_envio
FROM BI_M_AL_CUBO.BI_HECHO_VENTA hv
    INNER JOIN BI_M_AL_CUBO.BI_ENVIO be ON hv.ID_ENVIO = be.envio_id
    INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt ON hv.ID_TIEMPO = dt.tiempo_id
GROUP BY
    be.provincia_id,
    be.envio_id,
    dt.tiempo_anio


/********************
    EJERCICIO 08
*********************/

/*
    Aumento promedio de precios de cada proveedor anual. Para calcular este
    indicador se debe tomar como referencia el máximo precio por año menos
    el mínimo todo esto divido el mínimo precio del año. Teniendo en cuenta
    que los precios siempre van en aumento. 
*/

-- Aumento promedio de precios de cada proveedor anual
-- ((Tomar máximo precio por año) - (Mínimo precio por año)) / (Mínimo precio por año)

/*
    Explicación:
    1. Obtenemos todas las compras haciendo join con proveedor y con tiempo
    2. Agrupamos por id_producto, id_proveedor y tiempo_anio
    3. En la agrupación hacemos la operación de obtener el máximo y el mínimo
    4. Mostramos
*/

/*
    Table - BI_PROVEEDOR
    Column - proveedor_id PK
    Column - proveedor_cuit

    Table - HECHO_COMPRA
    Column - ID_PRODUCTO
    Column - ID_PROVEEDOR FK
    Column - ID_TIEMPO FK
    Column - compra_precio

    Table - DIMENSION_TIEMPO
    Column - ID_TIEMPO PK
    Column - TIEMPO_ANIO
*/


CREATE VIEW M_AL_CUBO.AUMENTO_PRECIOS_ANUAL
AS
SELECT
    hc.ID_PRODUCTO AS id_producto,
    bp.proveedor_cuit AS cuit_proveedor,
    dt.tiempo_anio AS anio,
    (MAX(hc.precio) - MIN(hc.precio)) / MIN(hc.precio) AS aumento_promedio
FROM BI_M_AL_CUBO.BI_HECHO_COMPRA hc
    INNER JOIN BI_M_AL_CUBO.BI_PROVEEDOR bp ON hc.ID_PROVEEDOR = bp.proveedor_id
    INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt ON hc.ID_TIEMPO = dt.tiempo_id
GROUP BY
    hc.ID_PRODUCTO,
    bp.proveedor_cuit,
    dt.tiempo_anio


/********************
    EJERCICIO 09
*********************/


--  Los 3 productos con mayor cantidad de reposición por mes.

/*
    Table - HECHO_COMPRA
    Column - ID_COMPRA PK
    Column - ID_PRODUCTO
    Column - ID_TIEMPO FK
    Column - CANTIDAD

    Table - DIMENSION_TIEMPO
    Column - ID_TIEMPO PK
    Column - TIEMPO_MES
    Column - TIEMPO_ANIO
*/

-- Todas las ventas por mes de cada producto

CREATE VIEW M_AL_CUBO.PRODUCTOS_CON_REPOSICIÓN
AS
SELECT
    SELECT
        hc.ID_PRODUCTO AS id_producto,
        dt.tiempo_mes AS mes,
        SUM(hc.UNIDADES) AS cantidad_reposicion
    FROM BI_M_AL_CUBO.BI_HECHO_COMPRA hc
        INNER JOIN BI_M_AL_CUBO.BI_TIEMPO dt ON hc.ID_TIEMPO = dt.tiempo_id
    GROUP BY
        dt.tiempo_mes,
        hc.ID_PRODUCTO
FROM (
    SELECT
        ROW_NUMBER() OVER (PARTITION BY mes ORDER BY mes, cantidad_reposicion DESC) AS r,
        t.*
    FROM
        xxx t) x
WHERE
    x.r <= 3;

/*
    Explicación:
    1. Obtenemos todas las compras y les hacemos join por la tabla dimensión tiempo
    2. Agrupamos por mes y producto
    3. Con esto obtenemos la cantidad total de compras DE CADA PRODUCTO para CADA MES
    4. Ahora solo nos queda obtener los primeros 3 resultados de cada grupo
    
    Links:
    https://stackoverflow.com/questions/51770408/how-to-select-top-n-records-for-each-category
    https://stackoverflow.com/questions/1124603/grouped-limit-in-postgresql-show-the-first-n-rows-for-each-group
*/

-- Depende la versión de SQL el query de arriba no anda, en ese caso debería andar el de abajo.
/*
    with
        basedata as (    
            SELECT
                hc.ID_PRODUCTO AS id_producto,
                dt.tiempo_mes AS mes,
                SUM(hc.CANTIDAD) AS cantidad_reposicion
            FROM HECHO_COMPRA hc
                INNER JOIN DIMENSION_TIEMPO dt ON hc.ID_TIEMPO = dt.tiempo_id
            GROUP BY
                dt.tiempo_mes,
                hc.ID_PRODUCTO 
        )
        ,
        basedata_with_rank as (
        select t.*
            , row_number() over (partition by CompanyNumber order by mes, cantidad_reposicion DESC) rn
        from basedata
        )
        select *
        from basedata_with_rank
        where rn <= 5
        order by mes, cantidad_reposicion DESC
*/


